openapi: 3.0.0
info:
  version: 1.0.0
  title: OWASP RGIPT Members API
  description: API for OWASP RGIPT Members registration and data storage on blockchain

paths:
  /api/set-user:
    post:
      tags:
        - User
      summary: Set user data
      operationId: setUser
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
                name:
                  type: string
                email:
                  type: string
                  format: email
                phone:
                  type: string
                branch:
                  type: string
                rollNo:
                  type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User data set successfully
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Server error

  /api/get-user/{rollNo}:
    get:
      tags:
        - User
      summary: Get user data by roll number
      operationId: getUserByRollNo
      parameters:
        - in: path
          name: rollNo
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User data retrieved successfully
        '404':
          description: User not found
        '500':
          description: Server error

  /api/all-users-status:
    get:
      tags:
        - User
      summary: Get all users with their approval status
      operationId: getAllUsersWithStatus
      responses:
        '200':
          description: Users retrieved successfully
        '500':
          description: Server error

  /api/is-approved/{rollNo}:
    get:
      tags:
        - User
      summary: Check if a user is approved
      operationId: isUserApproved
      parameters:
        - in: path
          name: rollNo
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Approval status retrieved
        '404':
          description: User not found
        '500':
          description: Server error

  /api/delete-user/{rollNo}:
    delete:
      tags:
        - User
      summary: Delete a user
      operationId: deleteUser
      parameters:
        - in: path
          name: rollNo
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User deleted successfully
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: User not found
        '500':
          description: Server error

  /api/add-admin:
    put:
      tags:
        - Admin
      summary: Add an admin
      operationId: addAdmin
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                adminAddress:
                  type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Admin added successfully
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Server error

  /api/remove-admin:
    put:
      tags:
        - Admin
      summary: Remove an admin
      operationId: removeAdmin
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                adminAddress:
                  type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Admin removed successfully
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Server error

  /api/set-approval:
    put:
      tags:
        - Admin
      summary: Set approval status for a user
      operationId: setApprovalStatus
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                rollNo:
                  type: string
                status:
                  type: boolean
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Approval status set successfully
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Server error

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
